// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: quota.sql

package repository

import (
	"context"
)

const createQuota = `-- name: CreateQuota :one
INSERT INTO quotas (name) VALUES (?) RETURNING id, name
`

func (q *Queries) CreateQuota(ctx context.Context, name string) (Quota, error) {
	row := q.db.QueryRowContext(ctx, createQuota, name)
	var i Quota
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const getQuota = `-- name: GetQuota :one
SELECT id, name FROM quotas WHERE id = ?
`

func (q *Queries) GetQuota(ctx context.Context, id int64) (Quota, error) {
	row := q.db.QueryRowContext(ctx, getQuota, id)
	var i Quota
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const getQuotaByName = `-- name: GetQuotaByName :one
SELECT id, name FROM quotas WHERE name = ?
`

func (q *Queries) GetQuotaByName(ctx context.Context, name string) (Quota, error) {
	row := q.db.QueryRowContext(ctx, getQuotaByName, name)
	var i Quota
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
